AWSTemplateFormatVersion: "2010-09-09" 
Resources: 
 VPC: 
  Type: AWS::EC2::VPC 
  Properties: 
   CidrBlock: 10.0.0.0/16
   EnableDnsHostnames: True 
   Tags: 
    - Key: Name 
      Value: !Sub 'VPC-InvSys - ${AWS::StackName}'
 InternetGateway: 
  Type: AWS::EC2::InternetGateway
  Properties: 
   Tags:
    - Key: Name 
      Value: !Sub 'IGW-InvSys - ${AWS::StackName}'
 AttachGateway:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
   VpcId: !Ref VPC 
   InternetGatewayId: !Ref InternetGateway
 PublicSubnet1:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC 
    CidrBlock: 10.0.0.0/24
    MapPublicIpOnLaunch: true
    AvailabilityZone: !Select 
     - 0 
     - !GetAZs 
       Ref: 'AWS::Region' 
    Tags: 
     - Key: Name
       Value: !Sub 'Public Subnet1-InvSys- ${AWS::StackName}' 
 PublicSubnet2:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC 
    CidrBlock: 10.0.1.0/24
    MapPublicIpOnLaunch: true
    AvailabilityZone: !Select 
     - 1 
     - !GetAZs 
       Ref: 'AWS::Region' 
    Tags: 
     - Key: Name
       Value: !Sub 'Public Subnet2-InvSys- ${AWS::StackName}' 
 PrivateSubnet1:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC 
    CidrBlock: 10.0.2.0/24
    MapPublicIpOnLaunch: false
    AvailabilityZone: !Select 
     - 0 
     - !GetAZs 
       Ref: 'AWS::Region' 
    Tags: 
     - Key: Name
       Value: !Sub 'Private Subnet1-InvSys- ${AWS::StackName}' 
 PrivateSubnet2:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC 
    CidrBlock: 10.0.3.0/24
    MapPublicIpOnLaunch: false
    AvailabilityZone: !Select 
     - 0 
     - !GetAZs 
       Ref: 'AWS::Region' 
    Tags: 
     - Key: Name
       Value: !Sub 'Private Subnet2-InvSys- ${AWS::StackName}'   
 NatGateway1EIP: 
  Type: AWS::EC2::EIP
  DependsOn: AttachGateway
  Properties: 
   Domain: vpc
 NatGateway2EIP: 
  Type: AWS::EC2::EIP
  DependsOn: AttachGateway
  Properties: 
   Domain: vpc
 NatGateway1:
  Type: AWS::EC2::NatGateway
  Properties: 
   AllocationId: !GetAtt NatGateway1EIP.AllocationId
   SubnetId: !Ref PublicSubnet1 
 NatGateway2:
  Type: AWS::EC2::NatGateway
  Properties: 
   AllocationId: !GetAtt NatGateway2EIP.AllocationId
   SubnetId: !Ref PublicSubnet2
 PublicRouteTable: 
  Type: AWS::EC2::RouteTable 
  Properties:
   VpcId: !Ref VPC  
   Tags:
    - Key: Name
      Value: !Sub 'PubRouteTable-InvSys - ${AWS::StackName}' 
 PublicRouteTableEntry:
  Type: AWS::EC2::Route
  DependsOn: AttachGateway
  Properties: 
   RouteTableId: !Ref PublicRouteTable
   DestinationCidrBlock: 0.0.0.0/0 
   GatewayId: !Ref InternetGateway
 PublicRouteTableSubnetAssociation1:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref PublicSubnet1
   RouteTableId: !Ref PublicRouteTable
 PublicRouteTableSubnetAssociation2:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId: !Ref PublicSubnet2
    RouteTableId: !Ref PublicRouteTable
 PrivateRouteTable1:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref VPC
   Tags:
    - Key: Name
      Value: !Sub 'PrivRouteTable1-InvSys - ${AWS::StackName}'
 DefaultPrivateRoute1:
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PrivateRouteTable1
   DestinationCidrBlock: 0.0.0.0/0
   NatGatewayId: !Ref NatGateway1
 PrivateSubnet1RouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PrivateRouteTable1
   SubnetId: !Ref PrivateSubnet1
 PrivateRouteTable2:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref VPC
   Tags:
    - Key: Name
      Value: !Sub 'PrivRouteTable2-InvSys - ${AWS::StackName}'
 DefaultPrivateRoute2:
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PrivateRouteTable2
   DestinationCidrBlock: 0.0.0.0/0
   NatGatewayId: !Ref NatGateway2
 PrivateSubnet2RouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   RouteTableId: !Ref PrivateRouteTable2
   SubnetId: !Ref PrivateSubnet2
Outputs:
 CIDRVPC:
  Value: !GetAtt VPC.CidrBlock
 PublicSubnet1:
  Value: !Ref PublicSubnet1
 PublicSubnet2:
  Value: !Ref PublicSubnet2
 PrivateSubnet1:
  Value: !Ref PrivateSubnet1
 PrivateSubnet2:
  Value: !Ref PrivateSubnet2
 VPC:
  Value: !Ref VPC